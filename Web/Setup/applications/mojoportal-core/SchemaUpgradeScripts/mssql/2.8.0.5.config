/********************************************************************
Update SiteSettingsExDef SiteWideScript to SiteWideContent Settings
********************************************************************/
UPDATE [mp_SiteSettingsExDef]
SET [KeyName] = 'SiteWideHeaderContent', [GroupName] = 'Admin'
WHERE [KeyName] = 'SiteWideHeaderScripts'

GO

UPDATE [mp_SiteSettingsExDef]
SET [KeyName] = 'SiteWideFooterContent', [GroupName] = 'Admin'
WHERE [KeyName] = 'SiteWideFooterScripts'

GO

UPDATE [mp_SiteSettingsExDef]
SET [KeyName] = 'SiteWideHeaderAdminContent', [GroupName] = 'Admin'
WHERE [KeyName] = 'SiteWideHeaderAdminScripts'

GO

UPDATE [mp_SiteSettingsExDef]
SET [KeyName] = 'SiteWideFooterAdminContent', [GroupName] = 'Admin'
WHERE [KeyName] = 'SiteWideFooterAdminScripts'

/********************************************************************
END Update SiteSettingsExDef SiteWideScript to SiteWideContent Settings
********************************************************************/
GO




/********************************************************************
Update mp_Users_SelectPage
********************************************************************/

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[mp_Users_SelectPage]
@PageNumber INT,
@PageSize INT,
@BeginsWith NVARCHAR(50),
@SiteID INT,
@SortMode INT,
@NameFilterMode NVARCHAR(10)
AS
DECLARE @PageLowerBound INT
DECLARE @PageUpperBound INT

SET @PageLowerBound = (@PageSize * @PageNumber) - @PageSize
SET @PageUpperBound = @PageLowerBound + @PageSize + 1

CREATE TABLE #PageIndexForUsers (
IndexID INT IDENTITY(1, 1) NOT NULL,
UserID INT
)

IF @BeginsWith IS NULL
OR @BeginsWith = ''
BEGIN
INSERT INTO #PageIndexForUsers (UserID)
SELECT UserID
FROM mp_Users
WHERE ProfileApproved = 1
AND DisplayInMemberList = 1
AND SiteID = @SiteID
AND IsDeleted = 0
ORDER BY [Name]
END
ELSE
BEGIN
INSERT INTO #PageIndexForUsers (UserID)
SELECT UserID
FROM mp_Users
WHERE ProfileApproved = 1
AND DisplayInMemberList = 1
AND SiteID = @SiteID
AND IsDeleted = 0
AND (
(@NameFilterMode = 'display' AND LOWER([Name]) LIKE LOWER(@BeginsWith) + '%')
OR ((@NameFilterMode = 'lastname' AND LOWER([LastName]) LIKE LOWER(@BeginsWith) + '%') OR (@NameFilterMode = 'lastname' AND LOWER([Name]) LIKE LOWER(@BeginsWith) + '%'))
OR (@NameFilterMode <> 'display' AND @NameFilterMode <> 'lastname' AND LOWER([Name]) LIKE LOWER(@BeginsWith) + '%')
)
ORDER BY
(CASE @SortMode WHEN 1 THEN [DateCreated] END) DESC,
(CASE @SortMode WHEN 2 THEN [LastName] END),
(CASE @SortMode WHEN 2 THEN [FirstName] END),
[Name]
END

SELECT *
FROM mp_Users u
JOIN #PageIndexForUsers p ON u.UserID = p.UserID
WHERE u.ProfileApproved = 1
AND u.SiteID = @SiteID
AND u.IsDeleted = 0
AND p.IndexID > @PageLowerBound
AND p.IndexID < @PageUpperBound
ORDER BY p.IndexID

DROP TABLE #PageIndexForUsers

/********************************************************************
END mp_Users_SelectPage
********************************************************************/
GO

		
		
/********************************************************************
Select FeatureGuid with "mp_ModuleDefinitions_SelectUserModules"
********************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER PROCEDURE [dbo].[mp_ModuleDefinitions_SelectUserModules]

@SiteID  int

AS

SELECT md.*, smd.FeatureGuid, smd.AuthorizedRoles
FROM mp_ModuleDefinitions md
JOIN mp_SiteModuleDefinitions smd
ON smd.ModuleDefID = md.ModuleDefID
WHERE smd.SiteID = @SiteID
AND md.IsAdmin = 0
ORDER BY 
md.SortOrder,
md.FeatureName

/********************************************************************
END Select FeatureGuid with "mp_ModuleDefinitions_SelectUserModules"
********************************************************************/
GO