/****** BEGIN adding description to roles table ******/

/* ALTER and UPDATE mp_Roles */
ALTER TABLE	mp_Roles
ADD description VARCHAR(255);

UPDATE mp_Roles
SET description = ''
WHERE description IS NULL;


DROP FUNCTION IF EXISTS public.mp_roles_insert(integer, character varying, character, character);

DROP FUNCTION IF EXISTS public.mp_roles_insert(integer, character varying, character varying, character, character);

CREATE OR REPLACE FUNCTION public.mp_roles_insert(
siteid integer,
rolename character varying,
displayname character varying,
description character varying,
siteguid character,
roleguid character)
RETURNS integer
LANGUAGE 'sql'
COST 100
VOLATILE SECURITY DEFINER PARALLEL UNSAFE
AS $BODY$

insert into mp_roles
(
siteid,
rolename,
displayname,
description,
siteguid,
roleguid

)
values
(
siteid,
rolename,
displayname,
description,
siteguid,
roleguid
);

select  cast(currval('mp_roles_roleid_seq') as int4);

$BODY$;

GRANT EXECUTE ON FUNCTION public.mp_roles_insert(integer, character varying, character varying, character varying, character, character) TO PUBLIC;

DROP FUNCTION IF EXISTS public.mp_roles_update(integer, character varying);

CREATE OR REPLACE FUNCTION public.mp_roles_update(
_roleid integer,
_displayname character varying,
_description character varying)
RETURNS integer
LANGUAGE 'plpgsql'
COST 100
VOLATILE SECURITY DEFINER PARALLEL UNSAFE

AS $BODY$

DECLARE _rowcount int4;

begin
update
mp_roles
set
displayname = _displayname,
description = _description
where
roleid = _roleid;
GET DIAGNOSTICS _rowcount = ROW_COUNT;
return _rowcount;
end
$BODY$;




/******* END add Description *******/


/* if using pgsql13+ you need to alter the pg_hba.conf to allow for md5 encription as default instead of scram*/
